/**
 * Flasger Petstore
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CatalogEntrySchema from '../model/CatalogEntrySchema';

/**
* Default service.
* @module api/DefaultApi
* @version 1.0.10
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiV1CatalogCatalogNameGet operation.
     * @callback module:api/DefaultApi~apiV1CatalogCatalogNameGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CatalogEntrySchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a catalog entry by id.
     * @param {String} catalogName The name of the catalog entry to return.
     * @param {module:api/DefaultApi~apiV1CatalogCatalogNameGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CatalogEntrySchema}
     */
    apiV1CatalogCatalogNameGet(catalogName, callback) {
      let postBody = null;
      // verify the required parameter 'catalogName' is set
      if (catalogName === undefined || catalogName === null) {
        throw new Error("Missing the required parameter 'catalogName' when calling apiV1CatalogCatalogNameGet");
      }

      let pathParams = {
        'catalog_name': catalogName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = CatalogEntrySchema;
      return this.apiClient.callApi(
        '/api/v1/catalog/{catalog_name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1CatalogNamesGet operation.
     * @callback module:api/DefaultApi~apiV1CatalogNamesGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/CatalogEntrySchema>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of all catalog names.
     * @param {module:api/DefaultApi~apiV1CatalogNamesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/CatalogEntrySchema>}
     */
    apiV1CatalogNamesGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [CatalogEntrySchema];
      return this.apiClient.callApi(
        '/api/v1/catalog_names/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
